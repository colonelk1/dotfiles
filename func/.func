#-----------------
# krompus ~/.func 
#-----------------

# Funk

ixc() {
  if [[ -z "$1" ]]
  then
    echo 'Usage: ixc foo.bar'
  else
    cat $1 | curl -F 'f:1=<-' ix.io | xclip -selection clipboard 
  fi
}

ixx() {
  if [[ -z "$1" ]]
  then
    echo 'ix clipboard: ixc example.txt'
  else
    ix $1 | xclip -selection clipboard 
  fi
}

#fuzzy kill
fk() {
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    kill -${1:-9} $pid
  fi
}

#fuzzy read
fr() { fzf -m -x | xargs -d'\n' -r "$@" ; }

# fuzzy open
# - CTRL-O to open with `open` command,
# - CTRL-E or Enter key to open with the $EDITOR
fo() {
  local out file key
  out=$(fzf-tmux --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && open "$file" || ${EDITOR:-vim} "$file"
  fi
}

orph() {
  if [[ ! -n $(pacman -Qdt) ]]; then
    echo "No orphans to remove."
  else
    sudo pacman -Rns $(pacman -Qdtq)
  fi
}

#pull symlinked files into their links.
pull () {
  for f in "$@"
  do
      orig=$(readlink -f "$f") &&
      mv "$orig" "$f"
  done 
}
 
# Farore's Wind; mark a spot and return.
fw() {
  local st=0
  if [[ $f ]]; then
      cd "$f"; st=$?
      unset f
  else
      f=$PWD
  fi
  return "$st"
}

mkcd() {
  if [[ -z "$1" ]]
  then
    echo 'mkcd; mkdir and cd into it. Usage: mkcd <dir>'
  else
    mkdir $1; cd $1
  fi
}

note () {
  # if file doesn't exist, create it
  if [[ ! -f $HOME/.notes ]]; then
      touch "$HOME/.notes"
  fi

  if ! (($#)); then
      # no arguments, print file
      cat "$HOME/.notes"
  elif [[ "$1" == "-c" ]]; then
      # clear file
      printf "%s" > "$HOME/.notes"
  else
      # add all arguments to file
      printf "%s\n" "$*" >> "$HOME/.notes"
  fi
}

# paste text
pb () {
  curl -sF "c=@${1:--}" -w "%{redirect_url}" 'https://ptpb.pw/?r=1' -o /dev/stderr | xsel -b -l /dev/null -b
}

# paste terminal recording
pbs () {
  asciinema rec /tmp/$$.json
  pbx /tmp/$$.json
}

vman() {
  vim -c "SuperMan $*"

  if [ "$?" != "0" ]; then
    echo "No manual entry for $*"
  fi
}

# edit configs
conf() {
  case $1 in
  alias)          $EDITOR ~/.alias ;;
  apache)    sudo $EDITOR /etc/apache2/apache2.conf ;;
  b)              $EDITOR ~/.bashrc ;;
  clerk)          $EDITOR ~/.config/clerk/config ;;
  compton)        $EDITOR ~/.config/compton/compton.conf ;;
  dunst)          $EDITOR ~/.config/dunst/dunstrc ;;
  func)           $EDITOR ~/.func ;;
  gvim)           $EDITOR ~/.gvimrc ;;
  i3)             $EDITOR ~/.i3/config ;;
  i3b)            $EDITOR ~/.i3blocks.conf ;;
  keynav)         $EDITOR ~/.keynavrc ;;
  mirror)         $EDITOR /etc/pacman.d/mirrorlist ;;
  mpd)            $EDITOR ~/.mpdconf ;;
  mpv)            $EDITOR ~/.config/mpv/config ;;
  mpvi)           $EDITOR ~/.config/mpv/input.conf ;;
  ncmpcpp)        $EDITOR ~/.ncmpcpp/config ;;
  pacman)         $EDITOR /etc/pacman.conf ;;
  penta)          $EDITOR ~/.pentadactylrc ;;
  php)       sudo $EDITOR /etc/php5/apache2/php.ini ;;
  qb)             $EDITOR ~/.config/qutebrowser/qutebrowser.conf ;;
  qk)             $EDITOR ~/.config/qutebrowser/keys.conf ;;
  r)              $EDITOR ~/.config/ranger/rc.conf ;;
  rcom)           $EDITOR ~/.config/ranger/commands.py ;;
  rifle)          $EDITOR ~/.config/ranger/rifle.conf ;;
  scope)          $EDITOR ~/.config/ranger/scope.sh ;;
  sxhkd)          $EDITOR ~/.config/sxhkd/sxhkdrc ;;
  sxiv)           $EDITOR ~/.config/sxiv/exec/key-handler ;;
  t)              $EDITOR ~/.config/termite/config ;;
  tmux)           $EDITOR ~/.tmux.conf ;;
  trc)            $EDITOR ~/.config/transmission-remote-cli/settings.cfg ;;
  vimpc)          $EDITOR ~/.vimpcrc ;;
  vim)            $EDITOR ~/.vimrc ;;
  xinit)          $EDITOR ~/.xinitrc ;;
  xres)           $EDITOR ~/.Xresources && xrdb ~/.Xresources ;;
  zathura)        $EDITOR ~/.config/zathura/zathurarc ;;
  z)              $EDITOR ~/.zshrc ;;
  *)              echo "Unknown application: $1" ;;
  esac
}    

man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[01;31m") \
    LESS_TERMCAP_md=$(printf "\e[01;38;5;74m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[38;5;246m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[04;38;5;146m") \
    man "$@"
}
